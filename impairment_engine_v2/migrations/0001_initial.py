# Generated by Django 5.1.1 on 2025-06-24 21:50

import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('country', models.CharField(default='Zambia', max_length=100)),
                ('base_currency', models.CharField(default='ZMW', max_length=3)),
                ('stage_1_threshold_days', models.IntegerField(default=30, help_text='Days past due threshold for Stage 2')),
                ('stage_2_threshold_days', models.IntegerField(default=90, help_text='Days past due threshold for Stage 3')),
                ('sicr_threshold_percent', models.DecimalField(decimal_places=2, default=Decimal('50.00'), help_text='SICR threshold percentage for PD deterioration', max_digits=5)),
                ('default_pd_floor', models.DecimalField(decimal_places=6, default=Decimal('0.000100'), help_text='Minimum PD floor (0.01%)', max_digits=10)),
                ('default_lgd_floor', models.DecimalField(decimal_places=2, default=Decimal('5.00'), help_text='Minimum LGD floor percentage', max_digits=5)),
                ('default_lgd_ceiling', models.DecimalField(decimal_places=2, default=Decimal('90.00'), help_text='Maximum LGD ceiling percentage', max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Companies',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=200)),
                ('description', models.TextField(blank=True)),
                ('reporting_date', models.DateField(help_text='As-of date for this analysis')),
                ('status', models.CharField(choices=[('setup', 'Initial Setup'), ('data_upload', 'Data Upload'), ('processing', 'Processing'), ('validation', 'Validation'), ('completed', 'Completed'), ('archived', 'Archived')], default='setup', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('loan_report_uploaded', models.BooleanField(default=False)),
                ('arrears_report_uploaded', models.BooleanField(default=False)),
                ('branch_mapping_applied', models.BooleanField(default=False)),
                ('loan_data', models.JSONField(blank=True, default=dict, help_text='Complete loan report data as JSON array')),
                ('arrears_data', models.JSONField(blank=True, default=dict, help_text='Complete arrears report data as JSON array')),
                ('ifrs9_staging_data', models.JSONField(blank=True, default=dict, help_text='IFRS9 staging results for all accounts')),
                ('ecl_calculation_data', models.JSONField(blank=True, default=dict, help_text='ECL calculation results for all accounts')),
                ('data_validation_errors', models.JSONField(blank=True, default=list, help_text='Validation errors found in uploaded data')),
                ('data_processing_log', models.JSONField(blank=True, default=list, help_text='Log of data processing steps and transformations')),
                ('total_loans', models.IntegerField(default=0)),
                ('total_exposure', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('total_ecl', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('upload_metadata', models.JSONField(blank=True, default=dict, help_text='Data Upload Metadata')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='impairment_engine_v2.company')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['company', '-reporting_date', 'name'],
                'unique_together': {('company', 'name')},
            },
        ),
        migrations.CreateModel(
            name='DataUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upload_type', models.CharField(choices=[('loan_report', 'Loan Report'), ('arrears_report', 'Arrears Report'), ('branch_mapping', 'Branch Mapping'), ('cbl_parameters', 'CBL Parameters')], max_length=20)),
                ('file_name', models.CharField(max_length=255)),
                ('file_path', models.FileField(upload_to='uploads/%Y/%m/')),
                ('status', models.CharField(choices=[('uploaded', 'Uploaded'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('partially_failed', 'Partially Failed')], default='uploaded', max_length=20)),
                ('records_processed', models.IntegerField(default=0)),
                ('records_failed', models.IntegerField(default=0)),
                ('error_log', models.TextField(blank=True)),
                ('validation_errors', models.JSONField(blank=True, default=list)),
                ('raw_data_sample', models.JSONField(blank=True, default=dict, help_text='Sample of raw uploaded data for debugging')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_uploads', to='impairment_engine_v2.project')),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='BranchMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch_name', models.CharField(max_length=200)),
                ('branch_code', models.CharField(max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='branch_mappings', to='impairment_engine_v2.company')),
            ],
            options={
                'ordering': ['branch_name'],
                'unique_together': {('company', 'branch_code')},
            },
        ),
        migrations.CreateModel(
            name='DataValidationRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rule_name', models.CharField(max_length=100)),
                ('rule_type', models.CharField(choices=[('required_field', 'Required Field'), ('data_type', 'Data Type Validation'), ('range_check', 'Range/Boundary Check'), ('format_check', 'Format Validation'), ('business_rule', 'Business Logic Rule'), ('cross_reference', 'Cross-Reference Check')], max_length=20)),
                ('data_type', models.CharField(choices=[('loan', 'Loan Data'), ('arrears', 'Arrears Data')], max_length=20)),
                ('field_name', models.CharField(max_length=50)),
                ('validation_config', models.JSONField(default=dict, help_text='Configuration for the validation rule (e.g., min/max values, regex patterns)')),
                ('error_message', models.TextField(help_text='Error message to display when validation fails')),
                ('is_active', models.BooleanField(default=True)),
                ('severity', models.CharField(choices=[('error', 'Error'), ('warning', 'Warning'), ('info', 'Info')], default='error', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='validation_rules', to='impairment_engine_v2.company')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['data_type', 'rule_name'],
                'unique_together': {('company', 'rule_name', 'data_type')},
            },
        ),
        migrations.CreateModel(
            name='IFRS9StageSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage_1_count', models.IntegerField(default=0)),
                ('stage_1_exposure', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('stage_1_ecl', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('stage_2_count', models.IntegerField(default=0)),
                ('stage_2_exposure', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('stage_2_ecl', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('stage_3_count', models.IntegerField(default=0)),
                ('stage_3_exposure', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('stage_3_ecl', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('stage_1_to_2_count', models.IntegerField(default=0)),
                ('stage_2_to_1_count', models.IntegerField(default=0)),
                ('stage_2_to_3_count', models.IntegerField(default=0)),
                ('stage_3_to_2_count', models.IntegerField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stage_summaries', to='impairment_engine_v2.project')),
            ],
            options={
                'unique_together': {('project',)},
            },
        ),
        migrations.CreateModel(
            name='ECLSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loan_type', models.CharField(max_length=100)),
                ('currency', models.CharField(max_length=3)),
                ('account_count', models.IntegerField(default=0)),
                ('total_exposure', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('total_ecl_12m', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('total_ecl_lifetime', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('total_final_ecl', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('ecl_coverage_ratio', models.DecimalField(decimal_places=6, default=0, max_digits=10)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ecl_summaries', to='impairment_engine_v2.project')),
            ],
            options={
                'unique_together': {('project', 'loan_type', 'currency')},
            },
        ),
        migrations.CreateModel(
            name='CBLParameters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=200)),
                ('loan_type', models.CharField(max_length=100)),
                ('currency', models.CharField(max_length=3)),
                ('risk_segment', models.CharField(blank=True, default='standard', max_length=50)),
                ('pd_12_month', models.DecimalField(decimal_places=6, help_text='12-month PD for Stage 1', max_digits=10)),
                ('pd_lifetime', models.DecimalField(decimal_places=6, help_text='Lifetime PD for Stage 2/3', max_digits=10)),
                ('pd_floor', models.DecimalField(decimal_places=6, help_text='Minimum PD floor', max_digits=10)),
                ('lgd_rate', models.DecimalField(decimal_places=2, help_text='Base LGD rate %', max_digits=5)),
                ('lgd_floor', models.DecimalField(decimal_places=2, help_text='Minimum LGD %', max_digits=5)),
                ('lgd_ceiling', models.DecimalField(decimal_places=2, help_text='Maximum LGD %', max_digits=5)),
                ('ccf_rate', models.DecimalField(decimal_places=2, default=0, help_text='Credit Conversion Factor for undrawn commitments', max_digits=5)),
                ('recovery_rate', models.DecimalField(decimal_places=2, default=0, help_text='Expected recovery rate %', max_digits=5)),
                ('recovery_time_months', models.IntegerField(default=36, help_text='Expected time to recover in months')),
                ('discount_rate', models.DecimalField(decimal_places=2, help_text='Discount rate for PV calculations', max_digits=5)),
                ('macro_adjustment_factor', models.DecimalField(decimal_places=2, default=1.0, help_text='Macro-economic adjustment factor', max_digits=5)),
                ('forward_looking_adjustment', models.DecimalField(decimal_places=2, default=0, help_text='Forward-looking adjustment %', max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cbl_parameters', to='impairment_engine_v2.project')),
            ],
            options={
                'ordering': ['loan_type', 'currency'],
                'unique_together': {('project', 'loan_type', 'currency', 'risk_segment')},
            },
        ),
    ]
