# Generated by Django 5.1.1 on 2025-06-21 18:36

import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LoanAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_number', models.CharField(db_index=True, help_text='Account/Contract Number', max_length=50)),
                ('branch', models.CharField(max_length=200)),
                ('branch_code', models.CharField(blank=True, max_length=20)),
                ('firstname', models.CharField(max_length=100)),
                ('lastname', models.CharField(max_length=100)),
                ('loan_type', models.CharField(max_length=100)),
                ('opening_date', models.DateField()),
                ('maturity_date', models.DateField()),
                ('currency', models.CharField(max_length=3)),
                ('loan_amount', models.DecimalField(decimal_places=2, help_text='Original loan amount', max_digits=15)),
                ('installment_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('balance', models.DecimalField(decimal_places=2, help_text='Outstanding balance', max_digits=15)),
                ('interest_rate', models.DecimalField(decimal_places=2, help_text='Annual interest rate %', max_digits=5)),
                ('insurance_fees', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('days_to_maturity', models.IntegerField(blank=True, null=True)),
                ('original_term_months', models.IntegerField(blank=True, null=True)),
                ('remaining_term_months', models.IntegerField(blank=True, null=True)),
                ('is_restructured', models.BooleanField(default=False)),
                ('is_refinanced', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, unique=True)),
                ('country', models.CharField(default='Zambia', max_length=100)),
                ('base_currency', models.CharField(default='ZMW', max_length=3)),
                ('stage_1_threshold_days', models.IntegerField(default=30, help_text='Days past due threshold for Stage 2')),
                ('stage_2_threshold_days', models.IntegerField(default=90, help_text='Days past due threshold for Stage 3')),
                ('sicr_threshold_percent', models.DecimalField(decimal_places=2, default=Decimal('50.00'), help_text='SICR threshold percentage for PD deterioration', max_digits=5)),
                ('default_pd_floor', models.DecimalField(decimal_places=6, default=Decimal('0.000100'), help_text='Minimum PD floor (0.01%)', max_digits=10)),
                ('default_lgd_floor', models.DecimalField(decimal_places=2, default=Decimal('5.00'), help_text='Minimum LGD floor percentage', max_digits=5)),
                ('default_lgd_ceiling', models.DecimalField(decimal_places=2, default=Decimal('90.00'), help_text='Maximum LGD ceiling percentage', max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Companies',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='IFRS9Stage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_stage', models.CharField(choices=[('stage_1', 'Stage 1 - 12-month ECL'), ('stage_2', 'Stage 2 - Lifetime ECL (not credit-impaired)'), ('stage_3', 'Stage 3 - Lifetime ECL (credit-impaired)'), ('poci', 'POCI - Purchased or Originated Credit-Impaired')], max_length=10)),
                ('previous_stage', models.CharField(blank=True, max_length=10)),
                ('stage_movement_date', models.DateField(blank=True, null=True)),
                ('dpd_criteria_met', models.BooleanField(default=False, help_text='Days past due criteria')),
                ('sicr_criteria_met', models.BooleanField(default=False, help_text='SICR criteria')),
                ('qualitative_criteria_met', models.BooleanField(default=False, help_text='Qualitative criteria')),
                ('sicr_reason', models.TextField(blank=True)),
                ('pd_deterioration_factor', models.DecimalField(blank=True, decimal_places=4, help_text='Factor by which PD has increased', max_digits=10, null=True)),
                ('restructured', models.BooleanField(default=False)),
                ('forbearance_applied', models.BooleanField(default=False)),
                ('watch_list', models.BooleanField(default=False)),
                ('days_past_due', models.IntegerField(default=0)),
                ('consecutive_missed_payments', models.IntegerField(default=0)),
                ('staging_rationale', models.TextField(blank=True, help_text='Rationale for staging decision')),
                ('auto_staged', models.BooleanField(default=True, help_text='Automatically staged vs manual override')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('loan_account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ifrs9_stage', to='impairment_engine_v2.loanaccount')),
            ],
        ),
        migrations.CreateModel(
            name='ECLCalculation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ead_amount', models.DecimalField(decimal_places=2, help_text='Exposure at Default', max_digits=15)),
                ('outstanding_balance', models.DecimalField(decimal_places=2, max_digits=15)),
                ('undrawn_commitment', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('applied_pd_12m', models.DecimalField(decimal_places=6, max_digits=10)),
                ('applied_pd_lifetime', models.DecimalField(decimal_places=6, max_digits=10)),
                ('applied_lgd', models.DecimalField(decimal_places=2, max_digits=5)),
                ('ecl_12_month', models.DecimalField(decimal_places=2, help_text='12-month ECL (Stage 1)', max_digits=15)),
                ('ecl_lifetime', models.DecimalField(decimal_places=2, help_text='Lifetime ECL (Stage 2/3)', max_digits=15)),
                ('final_ecl', models.DecimalField(decimal_places=2, help_text='Final ECL based on staging', max_digits=15)),
                ('present_value_factor', models.DecimalField(decimal_places=6, default=1, max_digits=10)),
                ('macro_adjustment', models.DecimalField(decimal_places=6, default=1, max_digits=10)),
                ('forward_looking_adjustment', models.DecimalField(decimal_places=6, default=1, max_digits=10)),
                ('calculation_method', models.CharField(choices=[('collective', 'Collective Assessment'), ('individual', 'Individual Assessment'), ('simplified', 'Simplified Approach')], default='collective', max_length=50)),
                ('calculation_date', models.DateTimeField(auto_now=True)),
                ('ecl_coverage_ratio', models.DecimalField(blank=True, decimal_places=6, help_text='ECL as % of exposure', max_digits=10, null=True)),
                ('loan_account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ecl_calculation', to='impairment_engine_v2.loanaccount')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('reporting_date', models.DateField(help_text='As-of date for this analysis')),
                ('status', models.CharField(choices=[('setup', 'Initial Setup'), ('data_upload', 'Data Upload'), ('processing', 'Processing'), ('validation', 'Validation'), ('completed', 'Completed'), ('archived', 'Archived')], default='setup', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('loan_report_uploaded', models.BooleanField(default=False)),
                ('arrears_report_uploaded', models.BooleanField(default=False)),
                ('branch_mapping_applied', models.BooleanField(default=False)),
                ('total_loans', models.IntegerField(default=0)),
                ('total_exposure', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('total_ecl', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='impairment_engine_v2.company')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['company', '-reporting_date', 'name'],
                'unique_together': {('company', 'name')},
            },
        ),
        migrations.AddField(
            model_name='loanaccount',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='loan_accounts', to='impairment_engine_v2.project'),
        ),
        migrations.CreateModel(
            name='DataUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upload_type', models.CharField(choices=[('loan_report', 'Loan Report'), ('arrears_report', 'Arrears Report'), ('branch_mapping', 'Branch Mapping'), ('cbl_parameters', 'CBL Parameters')], max_length=20)),
                ('file_name', models.CharField(max_length=255)),
                ('file_path', models.FileField(upload_to='uploads/%Y/%m/')),
                ('status', models.CharField(choices=[('uploaded', 'Uploaded'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('partially_failed', 'Partially Failed')], default='uploaded', max_length=20)),
                ('records_processed', models.IntegerField(default=0)),
                ('records_failed', models.IntegerField(default=0)),
                ('error_log', models.TextField(blank=True)),
                ('validation_errors', models.JSONField(blank=True, default=list)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_uploads', to='impairment_engine_v2.project')),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='CBLParameters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loan_type', models.CharField(max_length=100)),
                ('currency', models.CharField(max_length=3)),
                ('risk_segment', models.CharField(blank=True, default='standard', max_length=50)),
                ('pd_12_month', models.DecimalField(decimal_places=6, help_text='12-month PD for Stage 1', max_digits=10)),
                ('pd_lifetime', models.DecimalField(decimal_places=6, help_text='Lifetime PD for Stage 2/3', max_digits=10)),
                ('pd_floor', models.DecimalField(decimal_places=6, help_text='Minimum PD floor', max_digits=10)),
                ('lgd_rate', models.DecimalField(decimal_places=2, help_text='Base LGD rate %', max_digits=5)),
                ('lgd_floor', models.DecimalField(decimal_places=2, help_text='Minimum LGD %', max_digits=5)),
                ('lgd_ceiling', models.DecimalField(decimal_places=2, help_text='Maximum LGD %', max_digits=5)),
                ('ccf_rate', models.DecimalField(decimal_places=2, default=0, help_text='Credit Conversion Factor for undrawn commitments', max_digits=5)),
                ('recovery_rate', models.DecimalField(decimal_places=2, default=0, help_text='Expected recovery rate %', max_digits=5)),
                ('recovery_time_months', models.IntegerField(default=36, help_text='Expected time to recover in months')),
                ('discount_rate', models.DecimalField(decimal_places=2, help_text='Discount rate for PV calculations', max_digits=5)),
                ('macro_adjustment_factor', models.DecimalField(decimal_places=2, default=1.0, help_text='Macro-economic adjustment factor', max_digits=5)),
                ('forward_looking_adjustment', models.DecimalField(decimal_places=2, default=0, help_text='Forward-looking adjustment %', max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cbl_parameters', to='impairment_engine_v2.project')),
            ],
            options={
                'ordering': ['loan_type', 'currency'],
            },
        ),
        migrations.CreateModel(
            name='ArrearsAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_number', models.CharField(db_index=True, max_length=50)),
                ('client_name', models.CharField(max_length=200)),
                ('currency', models.CharField(max_length=3)),
                ('capital_balance', models.DecimalField(decimal_places=2, max_digits=15)),
                ('arrears_amount', models.DecimalField(decimal_places=2, help_text='Amount in arrears', max_digits=15)),
                ('exposure', models.DecimalField(decimal_places=2, help_text='Capital balance + arrears', max_digits=15)),
                ('days_past_due', models.IntegerField(help_text='Days past due for staging')),
                ('first_delinquency_date', models.DateField(blank=True, null=True)),
                ('last_payment_date', models.DateField(blank=True, null=True)),
                ('last_payment_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('is_restructured', models.BooleanField(default=False)),
                ('restructure_date', models.DateField(blank=True, null=True)),
                ('forbearance_granted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('loan_account', models.ForeignKey(help_text='Link to corresponding loan account', on_delete=django.db.models.deletion.CASCADE, related_name='arrears_data', to='impairment_engine_v2.loanaccount')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='arrears_accounts', to='impairment_engine_v2.project')),
            ],
        ),
        migrations.CreateModel(
            name='BranchMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch_name', models.CharField(max_length=200)),
                ('branch_code', models.CharField(max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='branch_mappings', to='impairment_engine_v2.company')),
            ],
            options={
                'ordering': ['branch_name'],
                'unique_together': {('company', 'branch_code')},
            },
        ),
        migrations.AddIndex(
            model_name='loanaccount',
            index=models.Index(fields=['project', 'account_number'], name='impairment__project_839072_idx'),
        ),
        migrations.AddIndex(
            model_name='loanaccount',
            index=models.Index(fields=['loan_type', 'currency'], name='impairment__loan_ty_88430d_idx'),
        ),
        migrations.AddIndex(
            model_name='loanaccount',
            index=models.Index(fields=['opening_date', 'maturity_date'], name='impairment__opening_8030eb_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='loanaccount',
            unique_together={('project', 'account_number')},
        ),
        migrations.AlterUniqueTogether(
            name='cblparameters',
            unique_together={('project', 'loan_type', 'currency', 'risk_segment')},
        ),
        migrations.AddIndex(
            model_name='arrearsaccount',
            index=models.Index(fields=['days_past_due'], name='impairment__days_pa_beb3e5_idx'),
        ),
        migrations.AddIndex(
            model_name='arrearsaccount',
            index=models.Index(fields=['first_delinquency_date'], name='impairment__first_d_900156_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='arrearsaccount',
            unique_together={('project', 'account_number')},
        ),
    ]
